#!/bin/bash

VERSION=$1
BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ -n $VERSION && $BRANCH == 'develop' ]]; then

  ROOT=$(git rev-parse --show-toplevel)

  cd $ROOT

  yarn build

  if [[ $? != 0 ]]; then
    echo
    echo "Unsuccessful build... Bailing"
    echo
    exit 1
  fi

  yarn test

  if [[ $? != 0 ]]; then
    echo
    echo "Unsuccessful tests... Bailing"
    echo
    exit 1
  fi

  git checkout master
  git merge develop

  echo
  echo "Changing package.json to version $VERSION"
  json -I -f package.json -e "this.version=\"$VERSION\""

  for pkg in ./modules/*; do
    if [[ -d $pkg ]]; then

      echo
      cd $pkg
      echo "Changing $pkg/package.json to version $VERSION"
      json -I -f package.json -e "this.version=\"$VERSION\""
      cd -
    fi
  done

  cd $ROOT

  # Updated references to other iab libs
  sed -i '' 's/\(\@iabtcf\/.*\)":\s*.*"/\1": "'$VERSION'"/g' ./modules/**/package.json

  yarn build
  yarn test

  git add -A
  git commit -m "Bumping to $VERSION"

  for pkg in ./modules/*; do
    if [[ -d $pkg ]]; then
      yarn publish --access public --new-version $VERSION $pkg
    fi
  done

  git push
  git tag -a $VERSION -m "Released $VERSION"
  git push origin $VERSION

  git checkout develop
  git merge master
  git push

else
  echo "No version passed"
  exit 1
fi
